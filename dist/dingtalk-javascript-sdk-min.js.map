{"version":3,"file":"dingtalk-javascript-sdk-min.js","sources":["../node_modules/_dingtalk-javascript-utility@0.2.0@dingtalk-javascript-utility/src/package/dingtalk-querystring/index.js","../node_modules/_dingtalk-javascript-utility@0.2.0@dingtalk-javascript-utility/src/package/dingtalk-url/index.js","../node_modules/_dingtalk-javascript-utility@0.2.0@dingtalk-javascript-utility/src/package/dingtalk-env/index.js","../node_modules/_dingtalk-javascript-utility@0.2.0@dingtalk-javascript-utility/src/package/dingtalk-require/index.js","../node_modules/_dingtalk-javascript-utility@0.2.0@dingtalk-javascript-utility/src/package/dingtalk-log/index.js","../src/package/dingtalk-sdk-exec/android_exec.js","../src/package/dingtalk-sdk-exec/ios_exec.js","../src/package/dingtalk-sdk-exec/web_exec.js","../src/package/dingtalk-sdk-exec/index.js","../src/package/dingtalk-sdk-ship/global-api/EventEmitter.js","../src/package/dingtalk-sdk-ship/core/parseJsApis.js","../src/package/dingtalk-sdk-ship/index.js","../src/shared/checkConfigVars.js","../src/core/permissionJsApis.js","../src/core/bridge.js","../src/platforms/web/nativeEvent.js","../src/platforms/web/index.js","../src/platforms/weex/nativeEvent.js","../src/platforms/weex/index.js","../node_modules/_dingtalk-javascript-utility@0.2.0@dingtalk-javascript-utility/src/package/dingtalk-timer/index.js","../node_modules/_dingtalk-javascript-utility@0.2.0@dingtalk-javascript-utility/src/index.js","../src/index.js"],"sourcesContent":["function parse(qs, sep, eq){\n  const obj = Object.create(null);\n  if (typeof qs !== 'string' || qs.length === 0 ){\n    return obj;\n  }\n  sep = sep || '&';\n  eq = eq || '=';\n  const params = qs.split(sep);\n  let i = 0;\n  let l = params.length;\n  for(;i<l;i++){\n    let items = params[i].split(eq);\n    let queryKey = items[0].trim();\n    let queryVal = '';\n    if (items.length >= 3){\n      items.splice(0,1);\n      let lastIndex = items.length - 1;\n      items.forEach(function(v,i){\n        v = v.trim();\n        if (i === lastIndex){\n          queryVal += v;\n        } else {\n          queryVal += v + eq\n        }\n      });\n    } else {\n      queryVal = items[1].trim();\n    }\n    let cur = obj[queryKey];\n    if (cur){\n      if (Array.isArray(cur)){\n        cur.push(decodeURIComponent(queryVal));\n      } else {\n        let temp = cur;\n        obj[queryKey] = new Array();\n        obj[queryKey].push(temp);\n        obj[queryKey].push(decodeURIComponent(queryVal));\n      }\n    } else {\n      obj[queryKey] = decodeURIComponent(queryVal);\n    }\n  }\n  return obj;\n}\n\nfunction stringify(obj, sep, eq){\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj !== null && typeof obj === 'object'){\n    const keys = Object.keys(obj);\n    const len = keys.length;\n    const flast = len - 1;\n    let fields = '';\n    let i = 0;\n    for (;i<len; i++){\n      let k = keys[i];\n      let v = obj[k];\n      let ks = k + eq;\n      if (Array.isArray(v)){\n        let vlen = v.length;\n        let vlast = vlen - 1;\n        let j = 0;\n        for (; j < vlen; ++j) {\n           fields += ks + decodeURIComponent(v[j]);\n           if (j < vlast){\n             fields += sep;\n           }\n        }\n        if (vlen && i < flast){\n          fields += sep;\n        }\n      } else {\n        fields += ks + decodeURIComponent(v);\n        if (i < flast){\n          fields += sep;\n        }\n      }\n    }\n    return fields;\n  }\n  return '';\n}\n\nexport default {\n  stringify,\n  parse\n};\n","import querystring from '../dingtalk-querystring';\n\nfunction format(url, query){\n  let search = querystring.stringify(query);\n  return url + '?' + search;\n}\n\nfunction parse(url,parseQueryString){\n  let location = {\n    hash: null,\n    search: null\n  };\n  if (!url){\n    return {};\n  }\n  const searchIndex = url.indexOf('?');\n  if (searchIndex === -1){\n    return {};\n  }\n  const hashIndex = url.indexOf('#');\n  if (hashIndex > -1){\n    location.hash = url.slice(hashIndex);\n    location.search = url.slice(searchIndex, hashIndex);\n  } else {\n    location.search = url.slice(searchIndex);\n  }\n  const searchString = location.search.slice(1);\n  const query = querystring.parse(searchString);\n  if (typeof parseQueryString === 'string' && parseQueryString.length > 0){\n    return query[parseQueryString];\n  } else {\n    return query;\n  }\n}\n\nexport default {\n  format,\n  parse\n}\n","import url from '../dingtalk-url';\n\nfunction getEnv(){\n  let containerEnv = {};\n  if (typeof weex !== 'undefined'){\n    const config = weex.config;\n    const env = config.env;\n    containerEnv.platform = env.platform;\n    containerEnv.bundleFrameworkType = 'Vue';\n    if (containerEnv.platform !== 'Web'){\n      containerEnv.dingtalk = {\n        bundleUrl: config.bundleUrl,\n        originalUrl: config.originalUrl\n      };\n      containerEnv.appVersion = env.appVersion;\n      containerEnv.appName = env.appName;\n    } else {\n      // Vue Web\n      const href = location.href;\n      const tpl = url.parse(href,'dd_wx_tpl');\n      const _wx_tpl = url.parse(href,'_wx_tpl');\n      containerEnv.dingtalk = {\n        bundleUrl: tpl ? tpl : _wx_tpl ? _wx_tpl : '',\n        originalUrl: href\n      }\n    }\n  } else {\n    // Rax Weex\n    if (typeof callNative === 'function'){\n      containerEnv.platform = navigator.platform;\n      containerEnv.appName = navigator.appName;\n      containerEnv.appVersion = navigator.appVersion;\n      containerEnv.dingtalk = {\n        bundleUrl: __weex_options__.bundleUrl,\n        originalUrl: __weex_options__.originalUrl\n      };\n    } else {\n      // Rax Web\n      containerEnv.platform = 'Web';\n      const href = location.href;\n      const tpl = url.parse(href,'dd_wx_tpl');\n      const _wx_tpl = url.parse(href,'_wx_tpl');\n      containerEnv.dingtalk = {\n        bundleUrl: tpl ? tpl : _wx_tpl ? _wx_tpl : '',\n        originalUrl: href\n      }\n    }\n    containerEnv.bundleFrameworkType = 'Rax';\n  }\n  return containerEnv;\n}\n\nconst env = getEnv();\nconst isWeb = env.platform === 'Web';\nconst isWeexiOS = env.platform === 'iOS';\nconst isWeexAndroid = env.platform === 'android';\nconst isWeex = isWeexiOS || isWeexAndroid;\nconst { dingtalk, bundleFrameworkType } = env;\nconst { bundleUrl, originalUrl } = dingtalk;\n\nlet UA;\nif(isWeb){\n  UA = window.navigator.userAgent.toLowerCase();\n}\n\nconst isDingtalk = dingtalkContainer();\n\nfunction dingtalkContainer(){\n  if (isWeex){\n    if (env.appName === 'DingTalk' || env.appName === 'com.alibaba.android.rimet'){\n      return true;\n    }\n    return false;\n  } else {\n    return UA && UA.indexOf('dingtalk') > -1;\n  }\n}\n\nfunction webAndroid(){\n  if (isWeb){\n    return UA && UA.indexOf('android') > -1;\n  }\n  return null;\n}\n\nfunction webiOS(){\n  if (isWeb){\n    return UA && /iphone|ipad|ipod|ios/.test(UA);\n  }\n  return null;\n}\n\nfunction fetchVersion(){\n  if (isWeb){\n    let matches = UA.match(/aliapp\\(\\w+\\/([a-zA-Z0-9.-]+)\\)/);\n    if (matches === null) {\n        matches = UA.match(/dingtalk\\/([a-zA-Z0-9.-]+)/);\n    }\n    let version = matches && matches[1];\n    return version;\n  } else {\n    return env.appVersion;\n  }\n}\n\nconst isWebiOS = webiOS();\nconst isWebAndroid = webAndroid();\nconst version = fetchVersion();\n\nfunction toPlatform(){\n  let platform;\n  if(isDingtalk){\n    if (isWebAndroid){\n      platform = 'web.android';\n    } else if (isWebiOS) {\n      platform = 'web.ios';\n    } else if (isWeexAndroid){\n      platform = 'weex.android';\n    } else if (isWeexiOS){\n      platform = 'weex.ios';\n    }\n  } else {\n    platform = 'not.dingtalk'\n  }\n  return platform;\n}\n\nexport default {\n  isDingtalk,\n  isWeb,\n  isWebiOS,\n  isWebAndroid,\n  isWeex,\n  isWeexiOS,\n  isWeexAndroid,\n  bundleFrameworkType,\n  bundleUrl,\n  originalUrl,\n  version,\n  platform: toPlatform()\n};\n","import env from '../dingtalk-env';\n\nconst { bundleFrameworkType,isWeex } = env;\n\nexport default function requireModule(name){\n  if (isWeex){\n    if (bundleFrameworkType === 'Vue'){\n      return weex.requireModule(name);\n    } else {\n      let moduleName = '@weex-module/' + name;\n      return __weex_require__(moduleName);\n    }\n  } else {\n    if (bundleFrameworkType === 'Vue'){\n      return weex.requireModule(name);\n    }\n  }\n}\n","import env from '../dingtalk-env';\n\nconst LOG = 'LOG';\nconst INFO = 'INFO';\nconst WARNING = 'WARNING';\nconst ERROR = 'ERROR';\n\nconst LogType = {\n  LOG,\n  INFO,\n  WARNING,\n  ERROR\n}\n\nfunction fillZore(str) {\n    const res = '00' + str;\n    return res.substring(res.length - 2);\n}\n\nlet logChannel = (logData) => {\n  const time = fillZore(logData.time.getHours())\n      + ':' + fillZore(logData.time.getMinutes())\n      + ':' + fillZore(logData.time.getSeconds());\n  switch (logData.type) {\n    case LogType.LOG:\n        console.log('time:'+ time +' | log: ', ...logData.logArr);\n      break;\n    case LogType.INFO:\n        console.info('time:'+ time + ' | info: ', ...logData.logArr);\n      break;\n    case LogType.ERROR:\n        console.error('time:'+ time +' | error: ', ...logData.logArr);\n      break;\n    case LogType.WARNING:\n        console.warn('time:'+ time +' | warning: ', ...logData.logArr);\n      break;\n    default:\n      break;\n  }\n};\n\nconst setLog = (fn) => {\n    logChannel = fn;\n};\n\nconst log = (logArr, type = LogType.LOG) => {\n  logChannel({\n    type,\n    logArr,\n    time: new Date(),\n  });\n};\n\nlog(['current environment: ' + env.platform]);\n\nexport default {\n  log,\n  setLog,\n  LogType\n}\n","/**\n * Created by xiangwenwen on 2017/3/24.\n */\n\nconst STATUS_NO_RESULT = '0';\nconst STATUS_OK = '1';\nconst STATUS_ERROR = '2';\n\nexport default function android_exec(exec,config){\n  const body = config.body;\n  const win = config.onSuccess;\n  const fail = config.onFail;\n  const context = config.context;\n  if (exec && typeof exec === 'function'){\n    exec(body,function (response) {\n      if (typeof response !== \"undefined\" && response.__status__) {\n        const status = response.__status__;\n        const message = response.__message__;\n        if (STATUS_OK === status){\n            win && win.call(context, message);\n        } else if (STATUS_ERROR === status){\n            fail && fail.call(context, message);\n        }\n      } else {\n        fail && fail.call('-1', \"\");\n      }\n    });\n  } else {\n    fail && fail.call('-1', \"\");\n  }\n}\n","/**\n * Created by xiangwenwen on 2017/3/24.\n */\n\nexport default function ios_exec(exec,config){\n  const body = config.body;\n  const win = config.onSuccess;\n  const fail = config.onFail;\n  const context = config.context;\n  if (exec && typeof exec === 'function'){\n    exec(body,function (response) {\n      if (typeof response !== \"undefined\") {\n        if ('0' === response.errorCode) {\n          win && win.call(context, response.result);\n        } else {\n          fail && fail.call(context, response.result);\n        }\n      }\n      else {\n          fail && fail.call('-1', \"\");\n      }\n    });\n  } else {\n    fail && fail.call('-1', \"\");\n  }\n}\n","import polyfills from 'dingtalk-sdk-polyfills';\n\nlet env = polyfills.env\nlet isAndroid = null;\nlet isIOS = null;\nlet bridgeReady = false;\nconst { isWeb } = env;\n\nif (isWeb){\n  const UA = window.navigator.userAgent.toLowerCase();\n  isAndroid = UA && UA.indexOf('android') > -1;\n  isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n}\n\nfunction ios_exec(config){\n  const webViewJavascriptBridge = window._WebViewJavascriptBridge;\n  if (!webViewJavascriptBridge){\n    throw 'runtime and bridge are not ready';\n  }\n  const { body, onSuccess, onFail, context } = config;\n  webViewJavascriptBridge.callHandler('exec',body,function(response){\n    if (typeof response !== 'undefined'){\n      if ('0' === response.errorCode){\n        typeof onSuccess === 'function' && onSuccess.call(context,response.result);\n      } else {\n        typeof onFail === 'function' && onFail.call(context,response.result);\n      }\n    }\n    typeof onFail === 'function' && onFail.call('-1','');\n  });\n}\n\nfunction android_exec(config){\n  let { body, onSuccess, onFail, context } = config;\n  let { plugin, action, args } = body;\n  const webViewJavascriptBridge = window.WebViewJavascriptBridgeAndroid;\n  webViewJavascriptBridge(plugin, action, args, onSuccess, onFail, context);\n}\n\nfunction runAndroid(){\n  window.WebViewJavascriptBridgeAndroid = window.nuva.require();\n}\n\nexport default function web_exec(config){\n  if (isIOS){\n    if (window._WebViewJavascriptBridge){\n      ios_exec(config);\n    } else {\n      document.addEventListener('_WebViewJavascriptBridgeReady',function(){\n        ios_exec(config);\n      },false);\n    }\n  } else if (isAndroid) {\n    const win = window;\n    if (win.nuva && (win.nuva.isReady === undefined || win.nuva.isReady)){\n      if (!bridgeReady){\n        runAndroid();\n      }\n      android_exec(config);\n    } else {\n      document.addEventListener('runtimeready',function(){\n        if (!bridgeReady){\n          runAndroid();\n        }\n        android_exec(config);\n      },false);\n    }\n  }\n}\n","/**\n * Created by xiangwenwen on 2017/3/24.\n */\n\nimport android_exec from './android_exec.js';\nimport ios_exec from './ios_exec.js';\nimport polyfills from 'dingtalk-sdk-polyfills';\nimport web_exec from './web_exec.js';\n\nlet env  = polyfills.env;\nlet nativeExec = null;\nconst { isWeex, isWeexiOS, isWeexAndroid } = env;\nif (isWeex){\n  nativeExec = polyfills.requireModule('nuvajs-exec').exec;\n}\n\nfunction exec_affirm(plugin, action, args,onSuccess, onFail, context){\n  const body = {\n    plugin: plugin,\n    action: action,\n    args: args ? args : {}\n  }\n  const config = {\n    body: body,\n    onSuccess: onSuccess ? onSuccess : null,\n    onFail: onFail ? onFail : null,\n    context: context ? context : null\n  }\n  exec(config);\n}\n\nfunction exec(config) {\n  let native_exec = nativeExec ? nativeExec : function(){};\n  if (isWeexiOS){\n    ios_exec(native_exec,config);\n  } else if(isWeexAndroid) {\n    android_exec(native_exec,config);\n  } else {\n    web_exec(config);\n  }\n}\n\nexport default exec;\n","/**\n * Created by xiangwenwen on 2017/3/24.\n */\n\nlet cat = {};\nlet EventEmitter = {\n  on: function(event,fun){\n    let cbs = cat[event];\n    cbs ? cbs.push(fun) : cat[event] = [];\n    if (!cbs) {\n      cat[event].push(fun);\n    }\n  },\n  off: function(event,fun){\n    let cbs = cat[event];\n    if (!cbs) {\n      return false;\n    }\n    if (!event && !fun) {\n      cat = {};\n      return true;\n    }\n    if (event && !fun) {\n      cat[event] = null;\n      return true;\n    }\n    let cb;\n    let i = cbs.length;\n    while(i--){\n      cb = cbs[i];\n      if (cb === fun || cb.fun === fun) {\n        cbs.splice(i,1);\n        break;\n      }\n    }\n    return true;\n  },\n  once: function(event,fun){\n    function _on(){\n      EventEmitter.off(event,_on);\n      fun.apply(this,arguments);\n    }\n    _on.fun = fun;\n    EventEmitter.on(event,_on);\n  },\n  emit: function(event){\n    let isString = typeof event === 'string';\n    if (!isString){\n      return;\n    }\n    let cbs = cat[event];\n    let args = toArray(arguments,1);\n    if (cbs) {\n      let i = 0;\n      let j = cbs.length;\n      for(;i<j;i++){\n        let cb = cbs[i];\n        cb.apply(this,args);\n      }\n    }\n  }\n};\n\nfunction toArray(list, index) {\n  let _index = index || 0;\n  let i = list.length - _index;\n  let _array = new Array(i);\n  while(i--){\n    _array[i] = list[i + _index]\n  }\n  return _array\n}\n\nexport default EventEmitter;\n","/**\n * Created by xiangwenwen on 2017/3/27.\n */\n\nimport exec from 'dingtalk-sdk-exec';\n\nfunction createApi(_name,_action){\n  return function(params){\n    if (!params) {\n      params = {};\n    }\n    let onSuccess = params.onSuccess;\n    let onFail = params.onFail;\n    delete params.onSuccess;\n    delete params.onFail;\n    delete params.onCancel;\n    const config = {\n      body: {\n        plugin: _name,\n        action: _action,\n        args: params\n      },\n      onSuccess: onSuccess,\n      onFail: onFail\n    };\n    exec(config);\n  }\n}\n\nfunction createFuns(name,funs){\n  let s = Object.create(null);\n  funs.forEach(function(action){\n    s[action] = createApi(name, action);\n  });\n  return s;\n}\n\nexport default function parseJsApis(jsApis){\n  let apis = Object.create(null);\n  for (let name in jsApis) {\n    let node = name.split('.');\n    let funs = jsApis[name];\n    let staging = null;\n    let i = 0;\n    let j = node.length;\n    while (true) {\n      if (!staging) {\n        if (1 === j) {\n          let h = false;\n          let p = apis[node[i]];\n          let s = createFuns(name, funs);\n          for (let x in p){\n            if (p.hasOwnProperty(x)){\n              h = true;\n              break;\n            }\n          }\n          if (h){\n            for (let k in s){\n              p[k] = s[k];\n            }\n          } else {\n            apis[node[i]] = createFuns(name, funs);\n          }\n          break;\n        }\n        if (apis[node[i]]){\n          staging = apis[node[i]];\n          i++;\n          continue;\n        }\n        apis[node[i]] = {};\n        staging = apis[node[i]];\n        i++;\n        continue;\n      } else {\n        if ((j - 1) === i) {\n          staging[node[i]] = createFuns(name, funs);\n          break;\n        }\n        if (staging[node[i]]) {\n          i++;\n          continue;\n        }\n        staging[node[i]] = {};\n        staging = staging[node[i]];\n      }\n      i++;\n      if (i > j) {\n        break;\n      }\n    }\n  }\n\treturn apis;\n}\n","/**\n * Created by xiangwenwen on 2017/3/24.\n */\n\nimport exec from 'dingtalk-sdk-exec';\nimport EventEmitter from './global-api/EventEmitter.js';\nimport parseJsApis from './core/parseJsApis.js';\nimport polyfills from 'dingtalk-sdk-polyfills';\n\nlet env = polyfills.env;\nlet globalEvent = {};\nconst { isWeex } = env;\nif (isWeex){\n  globalEvent = polyfills.requireModule('globalEvent');\n}\n\nfunction rtFunc(method){\n  return function(cb) {\n    const config = {\n      body: {\n        plugin: 'runtime',\n        action: method,\n        args: {}\n      },\n      onSuccess: function(response){\n        if (typeof cb === 'function'){\n          cb(response);\n        }\n      },\n      onFail: function(){\n\n      },\n      context: null\n    };\n    exec(config);\n  };\n}\n\nfunction initDingtalkRequire(cb){\n    rtFunc('getModules')(cb);\n}\n\nlet ship = {\n  getModules: null,\n  isReady: false,\n  runtime: {\n    info: rtFunc('info'),\n    _interceptBackButton: rtFunc('interceptBackButton'),\n    _interceptNavTitle: rtFunc('interceptNavTitle'),\n    _recoverNavTitle: rtFunc('recoverNavTitle'),\n    _getModules: rtFunc('getModules')\n  },\n  init: function(){\n    initDingtalkRequire(function(response){\n      if(response){\n        ship.isReady = true;\n        ship.apis = parseJsApis(response);\n        EventEmitter.emit('__ship_ready__');\n      }\n    });\n  },\n  ready: function(cb){\n    if (ship.isReady){\n      if (typeof cb === 'function'){\n        cb();\n      }\n    } else {\n      if (typeof cb === 'function'){\n        EventEmitter.once('__ship_ready__', function(){\n          cb();\n        });\n      }\n    }\n  },\n  on: function(type, handler){\n    globalEvent.addEventListener(type,function(e){\n      const event = {\n        preventDefault: function () {\n          console.warn('当前环境不支持 preventDefault')\n        },\n        detail: e\n      };\n      handler.call(this,event);\n    });\n  },\n  off: globalEvent.removeEventListener,\n  EventEmitter: EventEmitter\n};\n\nexport default ship;\n","import { log, LogType } from 'dingtalk-javascript-utility';\n\nconst checks = [\n  'agentId',\n  'corpId',\n  'timeStamp',\n  'nonceStr',\n  'signature',\n  'jsApiList'\n];\n\nexport default function checkConfigVars(config){\n  /*\n    corpId,\n    appId,\n    timeStamp,\n    nonceStr,\n    signature,\n    jsApiList,\n    type,\n    agentId\n   */\n  let checkInfo = [];\n  let infoKey = Object.keys(config);\n  checks.map(function(v){\n     const checkResult = infoKey.filter(function (k) { return v === k;});\n     if (checkResult.length === 0){\n         log(['configure : ' + v + 'is empty'],LogType.WARNING);\n     }\n  });\n}\n","/**\n * Created by xiangwenwen on 2017/3/27.\n */\nimport ship from 'dingtalk-sdk-ship';\n\nexport default function permissionJsApis(cb,jsApisConfig, errorCb){\n  if (!jsApisConfig){\n    ship.ready(function(){\n      cb(null);\n    });\n    return;\n  }\n  ship.ready(function(){\n    const permission = ship.apis.runtime.permission;\n    let apisConf = jsApisConfig ? jsApisConfig : {};\n    let errCb = errorCb ? errorCb : null;\n    apisConf.onSuccess = function(response){\n      cb(null, response);\n    };\n    apisConf.onFail = function(error){\n      if (typeof errCb === 'function'){\n        errCb(error);\n      } else {\n        cb(error, null);\n      }\n    };\n    permission.requestJsApis(apisConf);\n  });\n}\n","import ship from 'dingtalk-sdk-ship';\nimport { log, LogType } from 'dingtalk-javascript-utility';\nimport { extend } from 'shared/util.js';\nimport checkConfigVars from 'shared/checkConfigVars.js';\nimport permissionJsApis from './permissionJsApis.js';\n\nlet dingtalkJsApisConfig = null;\nlet dingtalkQueue = null;\nlet dingtalkErrorCb = null;\nlet isReady = false;\n\nfunction performQueue (){\n  if (dingtalkQueue && dingtalkQueue.length > 0){\n    dingtalkQueue.forEach(function(task){\n      task();\n    });\n    dingtalkQueue.length = 0;\n  }\n}\n\nfunction initDingtalkSDK(){\n  let dingtalk = {\n    apis: {},\n    config: function(config){\n      if (!config){\n        log(['config is undefined,you must configure Dingtalk parameters'],LogType.WARNING);\n        return;\n      }\n      if (process.env.NODE_ENV !== 'production'){\n        checkConfigVars(config);\n      }\n      dingtalkJsApisConfig = config;\n    },\n    init: function(){\n      // 初始化一次\n      dingtalkQueue = [];\n      ship.init();\n      ship.ready(function(){\n        isReady = ship.isReady;\n        dingtalk.apis = ship.apis ? ship.apis : {};\n        performQueue();\n      });\n    },\n    ready: function(cb){\n      if (!cb || typeof cb !== 'function'){\n        log(['callback is undefined'],LogType.WARNING);\n        return;\n      }\n      if (isReady){\n        permissionJsApis(cb,dingtalkJsApisConfig,dingtalkErrorCb);\n      } else {\n        function bufferFunction(cb){\n          return function(){\n            permissionJsApis(cb,dingtalkJsApisConfig,dingtalkErrorCb);\n          }\n        }\n        dingtalkQueue && dingtalkQueue.push(bufferFunction(cb));\n      }\n    },\n    error: function(cb){\n      if (typeof cb === 'function'){\n        dingtalkErrorCb = cb;\n      }\n    },\n    EventEmitter: ship.EventEmitter\n  };\n  return dingtalk;\n}\n\nexport default initDingtalkSDK;\n","\nfunction installNativeEvent(dingtalk){\n  dingtalk.on = function(type, listener, useCapture){\n    document.addEventListener(type, listener, useCapture);\n  }\n  dingtalk.off = function(type, listener, useCapture){\n    document.removeEventListener(type, listener, useCapture);\n  }\n}\n\nexport default installNativeEvent;\n","import initDingtalkSDK from 'core/bridge.js';\nimport installNativeEvent from './nativeEvent.js';\n\nfunction initWebDingtalkSDK(){\n  let dingtalk = initDingtalkSDK();\n  installNativeEvent(dingtalk);\n  return dingtalk;\n}\n\nexport default initWebDingtalkSDK;\n","import ship from 'dingtalk-sdk-ship';\n\nfunction installNativeEvent(dingtalk){\n  dingtalk.on = ship.on;\n  dingtalk.off = ship.off;\n}\n\nexport default installNativeEvent;\n","\nimport initDingtalkSDK from 'core/bridge.js';\nimport installNativeEvent from './nativeEvent.js';\n\nfunction initWeexDingtalkSDK(){\n  let dingtalk = initDingtalkSDK();\n  installNativeEvent(dingtalk);\n  return dingtalk;\n}\n\nexport default initWeexDingtalkSDK;\n","import requireModule from '../dingtalk-require';\nimport document from '../dingtalk-document';\nimport env from '../dingtalk-env';\n\nconst timer = requireModule('timer');\nconst { isWeex } = env;\n\nfunction setTimeout(handler,time){\n  if (isWeex){\n    timer.setTimeout(handler,time);\n    return document.taskCenter.callbackManager.lastCallbackId.toString();\n  } else {\n    return window.setTimeout(handler,time);\n  }\n}\n\nfunction clearTimeout(n){\n  if (isWeex){\n    timer.clearTimeout(n);\n  } else {\n    window.clearTimeout(n);\n  }\n}\n\nfunction setInterval(handler,time){\n  if (isWeex){\n    timer.setInterval(handler,time);\n    return document.taskCenter.callbackManager.lastCallbackId.toString();\n  } else {\n    return window.setInterval(handler,time);\n  }\n}\n\nfunction clearInterva(n){\n  if (isWeex){\n    timer.clearInterva(n);\n  } else {\n    window.clearInterva(n);\n  }\n}\n\nexport default {\n  setTimeout,\n  clearTimeout,\n  setInterval,\n  clearInterva\n};\n","import dingQueryString from './package/dingtalk-querystring';\nimport dingUrl from './package/dingtalk-url';\nimport dingEnv from './package/dingtalk-env';\nimport dingCompareVersion from './package/dingtalk-version';\nimport dingRequireModule from './package/dingtalk-require';\nimport dingDocument from './package/dingtalk-document';\nimport dingTimer from './package/dingtalk-timer';\nimport dingLogger from './package/dingtalk-log'\n\nexport const querystring = dingQueryString;\nexport const url = dingUrl;\nexport const env = dingEnv;\nexport const compareVersion = dingCompareVersion;\nexport const requireModule = dingRequireModule;\nexport const document = dingDocument;\nexport const timer = dingTimer;\nexport const { log, setLog, LogType } = dingLogger;\n\nexport default {\n  querystring,\n  url,\n  env,\n  compareVersion,\n  requireModule,\n  document,\n  timer,\n  LogType, \n  setLog, \n  log\n};","import polyfills from 'dingtalk-sdk-polyfills';\nimport initWebDingtalkSDK from './platforms/web/index.js';\nimport initWeexDingtalkSDK from './platforms/weex/index.js';\nimport { log, LogType } from 'dingtalk-javascript-utility';\n\nlet initCtrl = true;\nlet env = polyfills.env;\nconst { isDingtalk, isWeex, isWeb } = env;\n\nlet dingtalkSDK= {};\n\nif (!isDingtalk){\n  log(['can only open the page be Dingtalk Container'],LogType.WARNING);\n}\n\nif (initCtrl){\n  initCtrl = false;\n  if (isWeex){\n    dingtalkSDK = initWeexDingtalkSDK();\n  } else if (isWeb){\n    dingtalkSDK = initWebDingtalkSDK();\n  }\n  dingtalkSDK.init();\n}\n\nexport default dingtalkSDK;\n"],"names":["parse","qs","sep","eq","obj","Object","create","length","params","split","i","l","items","queryKey","trim","queryVal","splice","lastIndex","forEach","v","cur","Array","isArray","push","decodeURIComponent","temp","stringify","keys","len","flast","fields","k","ks","vlen","vlast","j","format","url","query","querystring","parseQueryString","location","searchIndex","indexOf","hashIndex","hash","slice","search","searchString","getEnv","containerEnv","weex","config","env","platform","bundleFrameworkType","dingtalk","bundleUrl","originalUrl","appVersion","appName","href","tpl","_wx_tpl","callNative","navigator","__weex_options__","dingtalkContainer","isWeex","UA","webAndroid","isWeb","webiOS","test","fetchVersion","matches","match","toPlatform","isDingtalk","isWebAndroid","isWebiOS","isWeexAndroid","isWeexiOS","requireModule","name","moduleName","__weex_require__","fillZore","str","res","substring","android_exec","exec","body","win","onSuccess","fail","onFail","context","response","__status__","status","message","__message__","STATUS_OK","call","STATUS_ERROR","ios_exec","errorCode","result","webViewJavascriptBridge","window","_WebViewJavascriptBridge","callHandler","plugin","action","args","WebViewJavascriptBridgeAndroid","runAndroid","nuva","require","web_exec","isIOS","addEventListener","isAndroid","undefined","isReady","bridgeReady","native_exec","nativeExec","toArray","list","index","_index","_array","createApi","_name","_action","onCancel","createFuns","funs","s","parseJsApis","jsApis","apis","node","staging","h","p","x","hasOwnProperty","rtFunc","method","cb","initDingtalkRequire","checkConfigVars","infoKey","map","filter","LogType","WARNING","permissionJsApis","jsApisConfig","errorCb","ready","permission","ship","runtime","apisConf","errCb","error","requestJsApis","performQueue","dingtalkQueue","task","initDingtalkSDK","process","NODE_ENV","init","dingtalkJsApisConfig","dingtalkErrorCb","EventEmitter","installNativeEvent","on","type","listener","useCapture","off","removeEventListener","initWebDingtalkSDK","initWeexDingtalkSDK","userAgent","toLowerCase","version","timer","LOG","INFO","ERROR","logChannel","logData","time","getHours","getMinutes","getSeconds","log","logArr","info","warn","setLog","fn","Date","dingEnv","dingRequireModule","dingLogger","polyfills","cat","event","fun","cbs","_on","apply","this","arguments","globalEvent","emit","once","handler","e","checks","initCtrl","dingtalkSDK"],"mappings":"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"}